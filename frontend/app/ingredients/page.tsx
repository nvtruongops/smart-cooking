'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import ProtectedRoute from '@/components/ProtectedRoute';
import IngredientBatchValidator from '@/components/ingredients/IngredientBatchValidator';

export default function IngredientsPage() {
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(false);

  const handleIngredientsValidated = async (validIngredients: string[]) => {
    if (validIngredients.length === 0) {
      alert('Vui l√≤ng th√™m √≠t nh·∫•t m·ªôt nguy√™n li·ªáu h·ª£p l·ªá');
      return;
    }

    if (validIngredients.length > 5) {
      alert('B·∫°n ch·ªâ c√≥ th·ªÉ ch·ªçn t·ªëi ƒëa 5 nguy√™n li·ªáu');
      return;
    }

    setIsLoading(true);

    try {
      // Store ingredients in sessionStorage to pass to AI suggestions page
      sessionStorage.setItem('selected_ingredients', JSON.stringify(validIngredients));

      // Navigate to AI suggestions page
      router.push('/ai-suggestions');
    } catch (error) {
      console.error('Error:', error);
      alert('C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i.');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <ProtectedRoute>
      <div className="min-h-screen bg-gray-50">
        {/* Header */}
        <nav className="bg-white shadow-sm">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between h-16">
              <div className="flex items-center">
                <a href="/dashboard" className="text-xl font-bold text-gray-900">
                  Smart Cooking
                </a>
              </div>
              <div className="flex items-center space-x-4">
                <a
                  href="/dashboard"
                  className="text-gray-700 hover:text-gray-900 px-3 py-2 rounded-md text-sm font-medium"
                >
                  Dashboard
                </a>
                <a
                  href="/profile"
                  className="text-gray-700 hover:text-gray-900 px-3 py-2 rounded-md text-sm font-medium"
                >
                  Profile
                </a>
              </div>
            </div>
          </div>
        </nav>

        {/* Main content */}
        <main className="max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
          {/* Page header */}
          <div className="mb-8">
            <h1 className="text-3xl font-bold text-gray-900">Ch·ªçn nguy√™n li·ªáu</h1>
            <p className="mt-2 text-gray-600">
              Nh·∫≠p c√°c nguy√™n li·ªáu b·∫°n c√≥ trong t·ªß l·∫°nh ƒë·ªÉ t√¨m c√¥ng th·ª©c ph√π h·ª£p
            </p>
          </div>

          {/* Instructions card */}
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-6 mb-8">
            <h2 className="text-lg font-semibold text-blue-900 mb-3">
              H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng
            </h2>
            <ul className="space-y-2 text-sm text-blue-800">
              <li className="flex items-start">
                <svg className="h-5 w-5 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
                <span>Nh·∫≠p t√™n nguy√™n li·ªáu v√† nh·∫•n Enter ho·∫∑c ch·ªçn t·ª´ g·ª£i √Ω t·ª± ƒë·ªông</span>
              </li>
              <li className="flex items-start">
                <svg className="h-5 w-5 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
                <span>Th√™m t·ª´ 1-5 nguy√™n li·ªáu (c√†ng nhi·ªÅu c√†ng d·ªÖ t√¨m c√¥ng th·ª©c ph√π h·ª£p)</span>
              </li>
              <li className="flex items-start">
                <svg className="h-5 w-5 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
                <span>Nh·∫•n &quot;Ki·ªÉm tra nguy√™n li·ªáu&quot; ƒë·ªÉ x√°c th·ª±c danh s√°ch</span>
              </li>
              <li className="flex items-start">
                <svg className="h-5 w-5 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
                <span>Ch·∫•p nh·∫≠n ho·∫∑c t·ª´ ch·ªëi c√°c ƒë·ªÅ xu·∫•t s·ª≠a l·ªói (n·∫øu c√≥)</span>
              </li>
              <li className="flex items-start">
                <svg className="h-5 w-5 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
                <span>Nh·∫•n &quot;T√¨m c√¥ng th·ª©c&quot; ƒë·ªÉ nh·∫≠n g·ª£i √Ω t·ª´ AI</span>
              </li>
            </ul>
          </div>

          {/* Ingredient input section */}
          <div className="bg-white rounded-lg shadow-md p-6">
            <IngredientBatchValidator onValidated={handleIngredientsValidated} />
          </div>

          {/* Tips section */}
          <div className="mt-8 bg-gray-50 border border-gray-200 rounded-lg p-6">
            <h3 className="text-sm font-semibold text-gray-900 mb-3">
              üí° M·∫πo nh·ªè
            </h3>
            <div className="space-y-2 text-sm text-gray-700">
              <p>
                ‚Ä¢ H·ªá th·ªëng s·ª≠ d·ª•ng AI v√† c∆° s·ªü d·ªØ li·ªáu c√¥ng th·ª©c c√≥ s·∫µn ƒë·ªÉ ƒë·ªÅ xu·∫•t m√≥n ƒÉn ph√π h·ª£p
              </p>
              <p>
                ‚Ä¢ N·∫øu nguy√™n li·ªáu b·∫°n nh·∫≠p c√≥ l·ªói ch√≠nh t·∫£, h·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông g·ª£i √Ω s·ª≠a
              </p>
              <p>
                ‚Ä¢ Danh s√°ch nguy√™n li·ªáu s·∫Ω ƒë∆∞·ª£c l∆∞u t·∫°m th·ªùi, b·∫°n c√≥ th·ªÉ quay l·∫°i sau
              </p>
              <p>
                ‚Ä¢ V·ªõi c√πng m·ªôt b·ªô nguy√™n li·ªáu, b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c nhi·ªÅu c√¥ng th·ª©c kh√°c nhau
              </p>
            </div>
          </div>

          {/* Loading overlay */}
          {isLoading && (
            <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
              <div className="bg-white rounded-lg p-6 max-w-sm">
                <div className="flex items-center space-x-3">
                  <svg className="animate-spin h-8 w-8 text-blue-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                    <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                  </svg>
                  <span className="text-lg font-medium text-gray-900">
                    ƒêang chuy·ªÉn ƒë·∫øn trang g·ª£i √Ω...
                  </span>
                </div>
              </div>
            </div>
          )}
        </main>
      </div>
    </ProtectedRoute>
  );
}
